import { useEffect, useState, useRef } from 'react'
import { supabase } from './supabaseClient'
import Auth from './Auth'
import Dashboard from './Dashboard'
import './index.css'

function App() {
  const [user, setUser] = useState(null)
  const didInitializeRef = useRef(false)  // NEW: lock to prevent duplicates

  useEffect(() => {
    const initializeUser = async (user) => {
      if (!user || didInitializeRef.current) return

      didInitializeRef.current = true  // lock it so it runs only once

      const { data: accounts, error } = await supabase
        .from('account')
        .select('id')
        .eq('user_id', user.id)

      if (error) {
        console.error("Error checking accounts:", error.message)
        return
      }

      if (!accounts || accounts.length === 0) {
        console.log("No accounts found — creating default ones")
        await supabase.from('account').insert([
          {
            user_id: user.id,
            name: 'PEA',
            type: 'PEA',
            currency: 'EUR',
          },
          {
            user_id: user.id,
            name: 'CTO',
            type: 'CTO',
            currency: 'EUR',
          }
        ])
      } else {
        console.log("Accounts already exist — skipping insert")
      }
    }

    const handleAuth = async () => {
      const { data: { user } } = await supabase.auth.getUser()
      setUser(user)
      if (user) await initializeUser(user)
    }

    handleAuth()

    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {
      const user = session?.user
      setUser(user)
      if (user) initializeUser(user)
    })

    return () => listener.subscription.unsubscribe()
  }, [])

  return (
    <div className="min-h-screen bg-gray-100 text-gray-900">
      {user ? <Dashboard user={user} /> : <Auth />}
    </div>
  )
}

export default App
